"use strict";(self.webpackChunkmonk_website=self.webpackChunkmonk_website||[]).push([[952],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>u});var a=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},l=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,i=e.originalType,p=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),m=c(n),u=s,d=m["".concat(p,".").concat(u)]||m[u]||k[u]||i;return n?a.createElement(d,r(r({ref:t},l),{},{components:n})):a.createElement(d,r({ref:t},l))}));function u(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=n.length,r=new Array(i);r[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:s,r[1]=o;for(var c=2;c<i;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},990:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>o,contentTitle:()=>p,metadata:()=>c,toc:()=>l,default:()=>m});var a=n(7462),s=n(3366),i=(n(7294),n(3905)),r=["components"],o={id:"tasks",title:"Tasks",slug:"/js/api/tasks"},p=void 0,c={unversionedId:"js/api/tasks",id:"js/api/tasks",title:"Tasks",description:"npm latest package",source:"@site/docs/js/api/tasks.md",sourceDirName:"js/api",slug:"/js/api/tasks",permalink:"/monkjs/docs/js/api/tasks",tags:[],version:"current",frontMatter:{id:"tasks",title:"Tasks",slug:"/js/api/tasks"},sidebar:"docsSidebar",previous:{title:"Inspections",permalink:"/monkjs/docs/js/api/inspections"},next:{title:"Views",permalink:"/monkjs/docs/js/api/views"}},l=[{value:"getOnInspectionTask",id:"getoninspectiontask",children:[],level:2},{value:"getAllInspectionTasks",id:"getallinspectiontasks",children:[],level:2},{value:"updateOneTaskOfInspection",id:"updateonetaskofinspection",children:[],level:2}],k={toc:l};function m(e){var t=e.components,n=(0,s.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/npm/v/@monkvision/corejs/latest.svg",alt:"npm latest package"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yarn"},"yarn add @monkvision/corejs\n")),(0,i.kt)("h2",{id:"getoninspectiontask"},"getOnInspectionTask"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"GET /inspections/${inspectionId}/tasks/${taskName}")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"import { monkApi } from '@monkvision/corejs';\n\nconst handleRequest = async () => {\n  await monkApi.tasks.getOne({ inspectionId, taskName });\n}\n")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://api.monk.ai/v1/apidocs/#/Inspection/get_task_of_inspection"},"Try it on api.monk.ai")),(0,i.kt)("h2",{id:"getallinspectiontasks"},"getAllInspectionTasks"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"GET /inspections/${inspectionId}/tasks")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"import { monkApi } from '@monkvision/corejs';\n\nconst handleRequest = async () => {\n  await monkApi.tasks.getAll({ inspectionId });\n}\n")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://api.monk.ai/v1/apidocs/#/Inspection/get_tasks_of_inspection"},"Try it on api.monk.ai")),(0,i.kt)("h2",{id:"updateonetaskofinspection"},"updateOneTaskOfInspection"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"PATCH /inspections/${inspectionId}/tasks/${taskName}")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"import { monkApi } from '@monkvision/corejs';\n\nconst handleRequest = async () => {\n  await monkApi.tasks.updateOne({\n    inspectionId,\n    taskName,\n    data,\n  });\n}\n")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://api.monk.ai/v1/apidocs/#/Inspection/edit_task"},"Try it on api.monk.ai")))}m.isMDXComponent=!0}}]);