"use strict";(self.webpackChunkmonk_website=self.webpackChunkmonk_website||[]).push([[666],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,g=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(g,i(i({ref:t},c),{},{components:n})):a.createElement(g,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1077:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>l,contentTitle:()=>p,metadata:()=>s,toc:()=>c,default:()=>u});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={id:"setting-up",title:"\u2699\ufe0f Setting up",slug:"/js/guides/setting-up"},p=void 0,s={unversionedId:"js/guides/setting-up",id:"js/guides/setting-up",title:"\u2699\ufe0f Setting up",description:"You will find guides to integrate the SDK according to your environment. We try to provide documentation and knowledge for as many cases as possible.",source:"@site/docs/js/guides/setting-up.md",sourceDirName:"js/guides",slug:"/js/guides/setting-up",permalink:"/monkjs/docs/js/guides/setting-up",tags:[],version:"current",frontMatter:{id:"setting-up",title:"\u2699\ufe0f Setting up",slug:"/js/guides/setting-up"},sidebar:"docsSidebar",previous:{title:"\ud83d\ude80 Getting started",permalink:"/monkjs/docs/"},next:{title:"\ud83d\udcf7 Taking pictures",permalink:"/monkjs/docs/js/guides/picturing"}},c=[{value:"Create React App",id:"create-react-app",children:[],level:2},{value:"Create Expo App",id:"create-expo-app",children:[{value:"Manage Workflow project",id:"manage-workflow-project",children:[],level:3},{value:"Bare Workflow project",id:"bare-workflow-project",children:[],level:3}],level:2},{value:"Theming &amp; Loading icons",id:"theming--loading-icons",children:[],level:2},{value:"What&#39;s next?",id:"whats-next",children:[],level:2}],d={toc:c};function u(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"You will find guides to integrate the SDK according to your environment. We try to provide documentation and knowledge for as many cases as possible.\nFor each workflow, you may find nuances that will be detailed in the ",(0,o.kt)("a",{parentName:"p",href:"/docs/troubleshooting"},"\ud83e\uddef Troubleshooting")," section."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The JS stack allows us to integrate a camera in Native via the React Native bridge, but also in web, via a compatible browser. This means that we can cover the following projects, from Create React App, React Native or Expo.")),(0,o.kt)("h2",{id:"create-react-app"},"Create React App"),(0,o.kt)("p",null,"We are initiating a new ",(0,o.kt)("a",{parentName:"p",href:"https://create-react-app.dev/"},"CRA")," project with ",(0,o.kt)("a",{parentName:"p",href:"https://create-react-app.dev/docs/getting-started#creating-an-app"},"npx, npm or yarn"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yarn"},"yarn create react-app my-awesome-project\n")),(0,o.kt)("p",null,"Then we go to the project folder and install dependencies required to import SDKs."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"cd my-awesome-project\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yarn"},"yarn add @monkvision/corejs @monkvision/react-native @monkvision/react-native-views @reduxjs/toolkit react-redux react-native-web\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"See the ",(0,o.kt)("a",{parentName:"strong",href:"/docs/js/guides/picturing"},"\ud83d\udcf7 Taking pictures")," section to find how to display a ",(0,o.kt)("inlineCode",{parentName:"strong"},"<CameraView />")," component.")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Projects initiated by CRA use a default webpack config. This brings problems when our dependencies are not exported by their owner in ES6.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Externals"),", in the babel vocabulary, means modules used in the sources of your App. We are going to add loaders so that Babel can handle modern JS such as ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining"},"optional chaining"),"."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"First, we install the necessary loaders in dev dependencies."),(0,o.kt)("li",{parentName:"ol"},"Then, the modules that will allow us to customiz and rewired the App.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yarn"},"yarn add -D @babel/plugin-proposal-optional-chaining @babel/plugin-proposal-nullish-coalescing-operator @babel/plugin-proposal-class-properties @babel/plugin-syntax-jsx @babel/plugin-transform-react-jsx @babel/plugin-transform-react-display-name && yarn add -D customize-cra react-app-rewired\n")),(0,o.kt)("p",null,"As specified in the ",(0,o.kt)("inlineCode",{parentName:"p"},"customize-cra")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/arackaf/customize-cra"},"documentation"),", we overload the configuration to add the custom plugins. For that, we create at the root of the project a ",(0,o.kt)("inlineCode",{parentName:"p"},"config-overrides.js")," file, and we add the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"/* config-overrides.js */\n\nconst { override, addExternalBabelPlugins } = require('customize-cra');\n\nmodule.exports = override(\n  ...addExternalBabelPlugins(\n    '@babel/plugin-proposal-optional-chaining',\n    '@babel/plugin-proposal-nullish-coalescing-operator',\n    '@babel/plugin-proposal-class-properties',\n    '@babel/plugin-syntax-jsx',\n    '@babel/plugin-transform-react-jsx',\n    '@babel/plugin-transform-react-display-name',\n    'react-native-paper/babel',\n  )\n);\n")),(0,o.kt)("p",null,"Finally, we change scripts in the ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json")," to run the project with a ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn start")," command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"scripts": {\n  "start": "react-app-rewired start",\n  "build": "react-app-rewired build",\n  "test": "react-app-rewired test",\n},\n')),(0,o.kt)("h2",{id:"create-expo-app"},"Create Expo App"),(0,o.kt)("p",null,"Create an ",(0,o.kt)("a",{parentName:"p",href:"https://https://docs.expo.dev/"},"expo")," project with ",(0,o.kt)("a",{parentName:"p",href:"https://https://docs.expo.dev/get-started/create-a-new-app/"},"npx")," and choose the workflow you want."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npx expo init my-awesome-project && cd my-awesome-project\n")),(0,o.kt)("p",null,"Like for the CRA project creation, install dependencies required to import SDK's."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yarn"},"yarn add @monkvision/corejs @monkvision/react-native @monkvision/react-native-views @reduxjs/toolkit react-redux react-native-web\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"You may also need to install expo-font, if you get a ",(0,o.kt)("inlineCode",{parentName:"p"},'fontFamily "material-community" is not a system font and has not been loaded through Font.loadAsync.')," error. This may be caused by a conflict between the project and the sdk's expo version that conducts to an incompatibility with the sdk's expo-font dependency.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-npm"},"npx expo install expo-font\n")),(0,o.kt)("h3",{id:"manage-workflow-project"},"Manage Workflow project"),(0,o.kt)("p",null,"All you have to do is import and use Monk."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"See the ",(0,o.kt)("a",{parentName:"li",href:"/docs/js/guides/picturing"},"\ud83d\udcf7 Taking pictures")," section"),(0,o.kt)("li",{parentName:"ul"},"See the ",(0,o.kt)("a",{parentName:"li",href:"#theming--loading-icons"},"Theming & Loading icons")," section")),(0,o.kt)("h3",{id:"bare-workflow-project"},"Bare Workflow project"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"If your expo version is ",(0,o.kt)("strong",{parentName:"p"},">= 43"),", then you may encounter this error while launching the android app build,")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Execution failed for task ':app:checkDebugAarMetadata'.\n> Could not resolve all files for configuration ':app:debugRuntimeClasspath'.\n   > Could not find com.google.android:cameraview:1.0.0.\n     Searched in the following locations:\n       - file:/home/user/.m2/repository/com/google/android/cameraview/1.0.0/cameraview-1.0.0.pom\n       - file:/home/user/test/expo-test-bare/node_modules/react-native/android/com/google/android/cameraview/1.0.0/cameraview-1.0.0.pom\n       - file:/home/user/test/expo-test-bare/node_modules/jsc-android/dist/com/google/android/cameraview/1.0.0/cameraview-1.0.0.pom\n")),(0,o.kt)("p",null,"So you may need to:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Add maven url to ",(0,o.kt)("inlineCode",{parentName:"li"},"android/build.gradle")),(0,o.kt)("li",{parentName:"ol"},"Re-install broken dependencies")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gradle"},'allprojects {\n  repositories {\n    ...\n    maven {\n      url "$rootDir/../node_modules/expo-camera/android/maven"\n    }\n  }\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yarn"},"yarn add expo-camera react-native-svg\n")),(0,o.kt)("h2",{id:"theming--loading-icons"},"Theming & Loading icons"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"CameraView")," component is using ",(0,o.kt)("inlineCode",{parentName:"p"},"react-native-paper")," icons from ",(0,o.kt)("inlineCode",{parentName:"p"},"MaterialCommunityIcons"),". We use a hook ",(0,o.kt)("inlineCode",{parentName:"p"},"useIcons")," to load icons as fonts in the root component (",(0,o.kt)("inlineCode",{parentName:"p"},"<App />"),")."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import React from 'react';\nimport { useIcons } from '@monkvision/react-native';\nimport { CameraView, theme } from '@monkvision/react-native-views';\nimport { Provider as PaperProvider } from 'react-native-paper';\n\nexport default function App() {\n  useIcons();\n\n  return (\n    <PaperProvider theme={theme}>\n      <CameraView />\n    </PaperProvider>\n  );\n}\n")),(0,o.kt)("p",null,"The hook also provides a ",(0,o.kt)("inlineCode",{parentName:"p"},"const loading = useIcons();")," boolean."),(0,o.kt)("p",null,"To customize the theme, we can create our own ",(0,o.kt)("inlineCode",{parentName:"p"},"theme.js")," file and import it via the ",(0,o.kt)("inlineCode",{parentName:"p"},"<PaperProvider>")," or use the Monk theme file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"/* theme.js */\n\nimport { DefaultTheme } from 'react-native-paper';\n\nconst theme = {\n  ...DefaultTheme,\n  dark: false,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: '#274b9f',\n    accent: '#7af7ff',\n    success: '#5ccc68',\n    warning: '#ff9800',\n    error: '#fa603d',\n    info: '#bbbdbf',\n    primaryContrastText: '#ffffff',\n  },\n};\n\nexport default theme;\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"See the ",(0,o.kt)("a",{parentName:"strong",href:"https://callstack.github.io/react-native-paper/theming.html"},"theming")," section of ",(0,o.kt)("inlineCode",{parentName:"strong"},"react-native-paper")," to more details.")),(0,o.kt)("h2",{id:"whats-next"},"What's next?"),(0,o.kt)("p",null,"You are ready to implement the Camera view and take pictures for analyzes."))}u.isMDXComponent=!0}}]);