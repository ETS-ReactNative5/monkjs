"use strict";(self.webpackChunkmonk_website=self.webpackChunkmonk_website||[]).push([[904],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>d});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var r=i.createContext({}),c=function(e){var n=i.useContext(r),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=c(e.components);return i.createElement(r.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,r=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(t),d=a,k=u["".concat(r,".").concat(d)]||u[d]||m[d]||o;return t?i.createElement(k,s(s({ref:n},l),{},{components:t})):i.createElement(k,s({ref:n},l))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=u;var p={};for(var r in n)hasOwnProperty.call(n,r)&&(p[r]=n[r]);p.originalType=e,p.mdxType="string"==typeof e?e:a,s[1]=p;for(var c=2;c<o;c++)s[c]=t[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6080:(e,n,t)=>{t.r(n),t.d(n,{frontMatter:()=>p,contentTitle:()=>r,metadata:()=>c,toc:()=>l,default:()=>u});var i=t(7462),a=t(3366),o=(t(7294),t(3905)),s=["components"],p={id:"inspections",title:"Inspections",slug:"/js/api/inspections"},r=void 0,c={unversionedId:"js/api/inspections",id:"js/api/inspections",title:"Inspections",description:"npm latest package",source:"@site/docs/js/api/inspections.md",sourceDirName:"js/api",slug:"/js/api/inspections",permalink:"/monkjs/docs/js/api/inspections",tags:[],version:"current",frontMatter:{id:"inspections",title:"Inspections",slug:"/js/api/inspections"},sidebar:"docsSidebar",previous:{title:"Images",permalink:"/monkjs/docs/js/api/images"},next:{title:"Tasks",permalink:"/monkjs/docs/js/api/tasks"}},l=[{value:"getOneInspectionById",id:"getoneinspectionbyid",children:[],level:2},{value:"getAllInspections",id:"getallinspections",children:[],level:2},{value:"createOneInspection",id:"createoneinspection",children:[],level:2},{value:"updateOneInspection",id:"updateoneinspection",children:[],level:2},{value:"deleteOneInspection",id:"deleteoneinspection",children:[],level:2}],m={toc:l};function u(e){var n=e.components,t=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,i.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://img.shields.io/npm/v/@monkvision/corejs/latest.svg",alt:"npm latest package"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yarn"},"yarn add @monkvision/corejs\n")),(0,o.kt)("h2",{id:"getoneinspectionbyid"},"getOneInspectionById"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"GET /inspections/${id}")),(0,o.kt)("p",null,"Returns an inspection with all its tasks."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { monkApi } from '@monkvision/corejs';\n\nconst handleRequest = async () => {\n  await monkApi.inspections.getOne({ id, params });\n}\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://api.monk.ai/v1/apidocs/#/Inspection/get_inspection"},"Try it on api.monk.ai")),(0,o.kt)("h2",{id:"getallinspections"},"getAllInspections"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"GET /inspections")),(0,o.kt)("p",null,"Returns all inspections created by user/organization."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { monkApi } from '@monkvision/corejs';\n\nconst handleRequest = async () => {\n  await monkApi.inspections.getAll({ params });\n}\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://api.monk.ai/v1/apidocs/#/Inspection/get_all_inspections"},"Try it on api.monk.ai")),(0,o.kt)("h2",{id:"createoneinspection"},"createOneInspection"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"POST /inspections")),(0,o.kt)("p",null,"An inspection contains data about the state of a vehicle at a given time. Returns a unique inspection id."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"You must create an inspection with the list of all the tasks\nyou will ever want to apply on this inspection.\nYou can add images directly or add images later.\nYou must specify on the images also what task you want to apply to the image.\nWhen a task have started it is too late to edit it\nor to add more image on which you want to apply task.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { monkApi } from '@monkvision/corejs';\n\nconst handleRequest = async () => {\n  await monkApi.inspections.createOne({ data });\n}\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://api.monk.ai/v1/apidocs/#/Inspection/post_inspection"},"Try it on api.monk.ai")),(0,o.kt)("h2",{id:"updateoneinspection"},"updateOneInspection"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"POST /inspections")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { monkApi } from '@monkvision/corejs';\n\nconst handleRequest = async () => {\n  await monkApi.inspections.updateOne({ data });\n}\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://api.monk.ai/v1/apidocs/#/Inspection/post_inspection"},"Try it on api.monk.ai")),(0,o.kt)("h2",{id:"deleteoneinspection"},"deleteOneInspection"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"DELETE /inspections/${id}")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { monkApi } from '@monkvision/corejs';\n\nconst handleRequest = async () => {\n  await monkApi.inspections.deleteOne({ id });\n}\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://api.monk.ai/v1/apidocs/#/Inspection/delete_inspection"},"Try it on api.monk.ai")))}u.isMDXComponent=!0}}]);